[[plugins]]
    repo = 'cohama/lexima.vim'
    on_i = 1

#[[plugins]] #load autoclose when type=insert
#    repo = 'Townk/vim-autoclose'

[[plugins]] #load complete when type=insert & has python3
    repo = 'Shougo/deoplete.nvim'
    if = '''has('python3')'''
    if = '''has('timers')'''

    hook_add = '''
        let g:deoplete#enable_at_startup = 1

        "C-j/kで候補移動
        inoremap <expr><C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
        inoremap <expr><C-k> pumvisible() ? "\<C-p>" : "\<C-k>"

        if has('conceal')
            set conceallevel=2 concealcursor=niv
        endif
    '''

[[plugins]]
    repo = 'roxma/nvim-yarp'
    if = '''!has('nvim')'''
    on_source = ['deoplete']

[[plugins]]
    repo = 'roxma/vim-hug-neovim-rpc'
    if = '''!has('nvim')'''
    on_source = ['deoplete']

[[plugins]]
    repo = 'Shougo/neco-vim'
    on_source = ['deoplete']

[[plugins]]
    repo = 'Shougo/neco-syntax'
    on_source = ['deoplete']

[[plugins]]
    repo = 'ujihisa/neco-look'
    on_source = ['deoplete']

[[plugins]] #load complete when type=insert & !has python3 & has lua
    repo = 'Shougo/neocomplete.vim'
    on_i = 1
    if = '''!has('python3')'''
    if = '''has('lua')'''

    hook_add = '''
        "C-j/kかTab/S-Tabで候補移動
        inoremap <expr><C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
        inoremap <expr><C-k> pumvisible() ? "\<C-p>" : "\<C-k>"
        imap <expr><TAB> pumvisible() ? "<C-n>" : neosnippet#jumpable() ? "<Plug>(neosnippet_expand_or_jump)" : "<TAB>"
        imap <expr><S-TAB> pumvisible() ? "<C-p>" : neosnippet#jumpable() ? "<Plug>(neosnippet_expand_or_jump)" : "<S-TAB>"

        "CRで候補確定・展開
        imap <expr><CR> neosnippet#expandable() ? "<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "<C-y>" : "<CR>"

        if has('conceal')
            set conceallevel=2 concealcursor=niv
        endif
    '''


[[plugins]] #load toml syntax when filetype=toml
    repo = 'cespare/vim-toml'
    on_ft = ['toml']

[[plugins]] #comment out
    repo = 'tyru/caw.vim'
    on_map = ['<Plug>(caw:hatpos:toggle)']

[[plugins]] #load nerdtree when called
    repo = 'scrooloose/nerdtree'
    on_cmd = ['NERDTree']
    on_cmd = ['NERDTreeToggle']

    hook_add='''
        let g:NERDTreeIgnore = ['\.swp$', '\.meta$']
        let g:NERDTreeQuitOnOpen = 1
    '''

[[plugins]] #call NT tab with NT
    repo = 'jistr/vim-nerdtree-tabs'
    on_source = ['NERDTree']

[[plugins]] #call NT git with NT
    repo = 'Xuyuanp/nerdtree-git-plugin'
    on_source = ['NERDTree']

[[plugins]] #undo graph
    repo = 'sjl/gundo.vim'
    if = '''has('python')'''
    on_cmd = ['GundoToggle']

    hook_add = '''
        let g:gundo_width = 30
        let g:gundo_help = 0
        let g:gundo_preview_bottom = 1
        "let g:gundo_preview_height = 10
        let g:gundo_preview_statusline = 1
        let g:gundo_tree_statusline = 1
        let g:gundo_return_on_revert = 0
    '''


[[plugins]] #undo graph
    repo = 'zchee/deoplete-jedi'
    on_ft = 'python'
    hook_add = '''
        let g:deoplete#sources#jedi#python_path = '/usr/bin/python3.6'
    '''
